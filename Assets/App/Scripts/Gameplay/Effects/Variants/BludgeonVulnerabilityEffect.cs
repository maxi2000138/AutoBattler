using System;
using App.Scripts.Gameplay.Weapons.Data;
using Scenes.App.Scripts.Gameplay.Units;
using UnityEngine;

namespace App.Scripts.Gameplay.Effects.Variants
{
  [Serializable]
  public class BludgeonVulnerabilityEffect : Effect
  {
    [SerializeField] private int _damageIncreaseValue = 2;
    public override EffectType Type => EffectType.Defence;
    public override bool CanApply(IUnit attacker, IUnit defender, EffectEnvironment environment) => environment.Weapon?.DamageType == DamageType.Bludgeoning;
    public override void Apply(IUnit attacker, IUnit defender, EffectEnvironment environment)
    {
      environment.DamageAdditive += environment.Damage * (_damageIncreaseValue - 1);
    }
    
    public override string ToString(IUnit attacker, IUnit defender, EffectEnvironment environment) => $"Slash vulnerability scale damage by {_damageIncreaseValue}: +{environment.Damage} ({environment.Damage} -> {environment.Damage + environment.Damage})\n";
  }
}